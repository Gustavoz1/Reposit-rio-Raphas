/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas.Estoque;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eric
 */
public class ConsultarEstoque extends javax.swing.JFrame {

    public ConsultarEstoque() {
        initComponents();
        txtCodProd.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsConsulta = new javax.swing.JScrollPane();
        tbConsulta = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCodProd = new javax.swing.JTextField();
        txtNomeProd = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        tbConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Quantidade", "Preço"
            }
        ));
        jsConsulta.setViewportView(tbConsulta);

        getContentPane().add(jsConsulta);
        jsConsulta.setBounds(20, 110, 590, 270);

        jLabel1.setText("Código:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 10, 50, 30);

        jLabel2.setText("Nome:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 60, 50, 30);

        txtCodProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodProdActionPerformed(evt);
            }
        });
        getContentPane().add(txtCodProd);
        txtCodProd.setBounds(80, 12, 80, 30);

        txtNomeProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdActionPerformed(evt);
            }
        });
        getContentPane().add(txtNomeProd);
        txtNomeProd.setBounds(80, 60, 180, 30);

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });
        getContentPane().add(btnConsultar);
        btnConsultar.setBounds(505, 62, 90, 30);

        setSize(new java.awt.Dimension(660, 448));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdActionPerformed
        Connection conexao;
        PreparedStatement st;
        ResultSet rs;
        //Conexão com o BD
        DefaultTableModel defTable;
        defTable = (DefaultTableModel) tbConsulta.getModel();
        defTable.setRowCount(0);
        //txtNomeProd.setText("*");

        try {

            Class.forName("com.mysql.jdbc.Driver");
            conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_raphas", "root", "admin123");
            //Busca o item na tabela do BD
            st = conexao.prepareStatement("SELECT * FROM tb_estoque WHERE nome_prod = ?;");
            st.setString(1, txtNomeProd.getText());
            rs = st.executeQuery();

            while (rs.next()) {

                //for(int i = 1; i < 10; i++);{
                Object[] dados = {rs.getString("id_prod"), rs.getString("nome_prod"),
                    rs.getString("qtd_prod"), rs.getString("preco_prod")};
                defTable.addRow(dados);
                //}

            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem o driver na biblioteca " + ex);
            return;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Algum parâmetro do BD está incorreto " + ex);
            return;
        }
    }//GEN-LAST:event_txtNomeProdActionPerformed
    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed

        String nomeprod = txtNomeProd.getText();
        String select = "*";

        Connection conexao;
        PreparedStatement st;
        ResultSet rs;
        //Conexão com o BD
        DefaultTableModel defTable;
        defTable = (DefaultTableModel) tbConsulta.getModel();
        defTable.setRowCount(0);
        if (nomeprod.isEmpty() == true && txtCodProd.getText().isEmpty() == true) //txtNomeProd.setText("*");
        {
            try {

                Class.forName("com.mysql.jdbc.Driver");
                conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_raphas", "root", "admin123");
                //Busca o item na tabela do BD
                st = conexao.prepareStatement("SELECT * FROM tb_estoque;");
                rs = st.executeQuery();

                while (rs.next()) {

                    //for(int i = 1; i < 10; i++);{
                    Object[] dados = {rs.getString("id_prod"), rs.getString("nome_prod"),
                        rs.getString("qtd_prod"), rs.getString("preco_prod")};
                    defTable.addRow(dados);
                    //}

                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Você não tem o driver na biblioteca " + ex);
                return;
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Algum parâmetro do BD está incorreto " + ex);
                return;
            }
        }
        if (txtCodProd.getText().isEmpty() == false) {
            try {

                int codigo = Integer.parseInt(txtCodProd.getText());

                if (codigo < 1) {
                    JOptionPane.showMessageDialog(null, "Código Invalido");
                    return;
                } else {
                }

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Campo código invalido");
                return;
            }
            if (txtCodProd.getText().isEmpty() == false) {
                try {
                    defTable = (DefaultTableModel) tbConsulta.getModel();
                    defTable.setRowCount(0);
                    Class.forName("com.mysql.jdbc.Driver");
                    conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_raphas", "root", "admin123");
                    //Busca o item na tabela do BD
                    st = conexao.prepareStatement("SELECT * FROM tb_estoque where id_prod = ?; ");
                    st.setString(1, txtCodProd.getText());
                    rs = st.executeQuery();

                    if (rs.next()) {
                        DefaultTableModel dtm = (DefaultTableModel) tbConsulta.getModel();

                        Object[] dados = {rs.getString("id_prod"), rs.getString("nome_prod"),
                            rs.getString("qtd_prod"), rs.getString("preco_prod")};
                        dtm.addRow(dados);
                    }

                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Você não tem o driver na biblioteca " + ex);
                    return;
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Algum parâmetro do BD está incorreto " + ex);
                    return;
                }

                if (txtNomeProd.getText().isEmpty() == false) //txtNomeProd.setText("*");
                {
                    try {
                        defTable = (DefaultTableModel) tbConsulta.getModel();
                        defTable.setRowCount(0);
                        Class.forName("com.mysql.jdbc.Driver");
                        conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_raphas", "root", "admin123");
                        //Busca o item na tabela do BD
                        st = conexao.prepareStatement("SELECT * FROM tb_estoque where nome_prod Contains ?; ");
                        st.setString(1, txtNomeProd.getText());
                        rs = st.executeQuery();

                        if (rs.next()) {
                            DefaultTableModel dtm = (DefaultTableModel) tbConsulta.getModel();

                            Object[] dados = {rs.getString("id_prod"), rs.getString("nome_prod"),
                                rs.getString("qtd_prod"), rs.getString("preco_prod")};
                            dtm.addRow(dados);
                        }
                        
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(null, "Você não tem o driver na biblioteca " + ex);
                        return;
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Algum parâmetro do BD está incorreto " + ex);
                        return;
                    }

                }
            }
        }
    }//GEN-LAST:event_btnConsultarActionPerformed
    private void txtCodProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodProdActionPerformed

        Connection conexao;
        PreparedStatement st;
        ResultSet rs;
        DefaultTableModel defTable;
        try {

            defTable = (DefaultTableModel) tbConsulta.getModel();
            defTable.setRowCount(0);
            Class.forName("com.mysql.jdbc.Driver");
            conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_raphas", "root", "admin123");
            //Busca o item na tabela do BD
            st = conexao.prepareStatement("SELECT * FROM tb_estoque where id_prod = ?; ");
            st.setString(1, txtCodProd.getText());
            rs = st.executeQuery();

            if (rs.next()) {
                DefaultTableModel dtm = (DefaultTableModel) tbConsulta.getModel();

                Object[] dados = {rs.getString("id_prod"), rs.getString("nome_prod"),
                    rs.getString("qtd_prod"), rs.getString("preco_prod")};
                dtm.addRow(dados);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem o driver na biblioteca " + ex);
            return;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Algum parâmetro do BD está incorreto " + ex);
            return;
        }

    }//GEN-LAST:event_txtCodProdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultarEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jsConsulta;
    private javax.swing.JTable tbConsulta;
    private javax.swing.JTextField txtCodProd;
    private javax.swing.JTextField txtNomeProd;
    // End of variables declaration//GEN-END:variables
}
